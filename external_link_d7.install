<?php
/**
* Implements hook_install().
*/
function external_link_d7_install() {
node_types_rebuild();
$types = node_type_get_types();|
node_add_body_field($types['external_link_d7']);
}

/**
* Implements hook_uninstall().
*/
function external_link_d7_uninstall() {
$ournewtype = 'external_link_d7';
$sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
$result = db_query($sql, array(':type' => $ournewtype));
$nodeids = array();
foreach ($result as $row) {
$nodeids[] = $row->nid;
}
node_delete_multiple($nodeids);
node_type_delete($ournewtype);
}



/**
 * Define the fields for our content type.
 *
 * This big array is factored into this function for readability.
 *
 * @return array
 *   An associative array specifying the fields we wish to add to our
 *   new node type.
 */
function _external_link_d7_installed_fields() {
    return array(
        'field_link' => array(
            'translatable' => '0',
            'entity_types' => array(),
            'settings' => array(
                'attributes' => array(
                    'target' => 'default',
                    'class' => '',
                    'rel' => '',
                ),
                'url' => 1,
                'title' => 'optional',
                'title_value' => '',
                'title_maxlength' => 128,
                'enable_tokens' => 1,
                'display' => array(
                    'url_cutoff' => 80,
                ),
            ),
            'storage' => array(
                'type' => 'field_sql_storage',
                'settings' => array(),
                'module' => 'field_sql_storage',
                'active' => '1',
                'details' => array(
                    'sql' => array(
                        'FIELD_LOAD_CURRENT' => array(
                            'field_data_field_link' => array(
                                'url' => 'field_link_url',
                                'title' => 'field_link_title',
                                'attributes' => 'field_link_attributes',
                            ),
                        ),
                        'FIELD_LOAD_REVISION' => array(
                            'field_revision_field_link' => array(
                                'url' => 'field_link_url',
                                'title' => 'field_link_title',
                                'attributes' => 'field_link_attributes',
                            ),
                        ),
                    ),
                ),
            ),
            'foreign keys' => array(),
            'indexes' => array(),
            'field_name' => 'field_link',
            'type' => 'link_field',
            'module' => 'link',
            'active' => '1',
            'locked' => '0',
            'cardinality' => '1',
            'deleted' => '0',
            'columns' => array(
                'url' => array(
                    'type' => 'varchar',
                    'length' => 2048,
                    'not null' => FALSE,
                    'sortable' => TRUE,
                ),
                'title' => array(
                    'type' => 'varchar',
                    'length' => 255,
                    'not null' => FALSE,
                    'sortable' => TRUE,
                ),
                'attributes' => array(
                    'type' => 'text',
                    'size' => 'medium',
                    'not null' => FALSE,
                ),
            ),
        )
    );

}

/**
 * Define the field instances for our content type.
 *
 * The instance lets Drupal know which widget to use to allow the user to enter
 * data and how to react in different view modes.  We are going to display a
 * page that uses a custom "external_link_d7_list" view mode.  We will set a
 * cardinality of three allowing our content type to give the user three color
 * fields.
 *
 * This big array is factored into this function for readability.
 *
 * @return array
 *   An associative array specifying the instances we wish to add to our new
 *   node type.
 */
function _external_link_d7_installed_instances() {
    return array(
        'field_link' => array(

            'label' => 'Link',
            'widget' => array(
                'weight' => '31',
                'type' => 'link_field',
                'module' => 'link',
                'active' => 0,
                'settings' => array(),
            ),
            'settings' => array(
                'absolute_url' => 1,
                'validate_url' => 1,
                'url' => 1,
                'title' => 'none',
                'title_value' => '',
                'title_label_use_field_label' => 0,
                'title_maxlength' => '128',
                'enable_tokens' => 1,
                'display' => array(
                    'url_cutoff' => '80',
                ),
                'attributes' => array(
                    'target' => 'default',
                    'rel' => '',
                    'configurable_class' => 0,
                    'class' => '',
                    'configurable_title' => 0,
                    'title' => '',
                ),
                'rel_remove' => 'default',
                'user_register_form' => FALSE,
            ),
            'display' => array(
                'default' => array(
                    'label' => 'above',
                    'type' => 'link_default',
                    'settings' => array(),
                    'module' => 'link',
                    'weight' => 2,
                ),
                'full' => array(
                    'label' => 'above',
                    'type' => 'field_redirection',
                    'weight' => '0',
                    'settings' => array(
                        'code' => '301',
                        '404_if_empty' => FALSE,
                        'page_restrictions' => 0,
                        'pages' => '',
                    ),
                    'module' => 'field_redirection',
                ),
                'teaser' => array(
                    'type' => 'hidden',
                    'label' => 'above',
                    'settings' => array(),
                    'weight' => 0,
                ),
                'external_link_d7_list' => array(
                    'type' => 'hidden',
                    'label' => 'above',
                    'settings' => array(),
                    'weight' => 0,
                ),
            ),
            'required' => 1,
            'description' => '',
            'default_value' => NULL,
            'field_name' => 'field_link',
            'entity_type' => 'node',
            'bundle' => 'external_link_d7',
            'deleted' => '0',

        ),
    );
}


/**
 * Implements hook_node_type_insert().
 *
 * Much like hook_node_insert() lets us know that a node is being
 * inserted into the database, hook_node_type_insert() lets us know
 * that a new content type has been inserted.
 *
 * Since Drupal will at some point insert our new content type,
 * this gives us a chance to add the fields we want.
 *
 * It is called for all inserts to the content type database, so
 * we have to make sure we're only modifying the type we're
 * concerned with.
 */
function external_link_d7_node_type_insert($content_type) {
    if ($content_type->type == 'external_link_d7') {
        // First we add the body field. Node API helpfully gives us
        // node_add_body_field().
        // We'll set the body label now, although we could also set
        // it along with our other instance properties later.

//        $body_instance = node_add_body_field($content_type, t('Link Description'));

        // Add our external_link_d7_list view mode to the body instance
        // display by instructing the body to display as a summary.
//        $body_instance['display']['external_link_d7_list'] = array(
//            'label' => 'hidden',
//            'type' => 'text_summary_or_trimmed',
//        );

        // Save our changes to the body field instance.
//        field_update_instance($body_instance);

        // Create all the fields we are adding to our content type.
        foreach (_external_link_d7_installed_fields() as $field) {
            field_create_field($field);
        }

        // Create all the instances for our fields.
        foreach (_external_link_d7_installed_instances() as $instance) {
            $instance['entity_type'] = 'node';
            $instance['bundle'] = 'external_link_d7';
            field_create_instance($instance);
        }
    }
}

